{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import moment from \"moment\";\n// import axios from \"axios\";\n\n// const WeatherApp = () => {\n//   const [location, setLocation] = useState(\"\");\n//   const [weatherData, setWeatherData] = useState(null);\n//   const [loading, setLoading] = useState(false);\n\n//   useEffect(() => {\n//     const fetchWeatherData = async () => {\n//       if (location) {\n//         setLoading(true);\n//         const apiKey = \"94769bac42f99a1dd90610f2611e3ae4\";\n//         const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${apiKey}&units=metric`;\n//         try {\n//           const response = await axios.get(apiUrl);\n//           setWeatherData(response.data);\n//           setLoading(false);\n//         } catch (error) {\n//           console.log(error);\n//           setLoading(false);\n//         }\n//       }\n//     };\n\n//     fetchWeatherData();\n//   }, [location]);\n\n//   const handleLocationChange = (event) => {\n//     setLocation(event.target.value);\n//   };\n\n//   const renderWeatherData = () => {\n//     if (loading) {\n//       return <p>Loading weather data...</p>;\n//     }\n\n//     if (!weatherData) {\n//       return null;\n//     }\n\n//     const weatherDescription = weatherData.weather[0].description;\n//     const temperature = Math.round(weatherData.main.temp);\n//     const feelsLikeTemperature = Math.round(weatherData.main.feels_like);\n//     const humidity = weatherData.main.humidity;\n//     const windSpeed = weatherData.wind.speed;\n\n//     return (\n//       <div>\n//         <h2>{weatherDescription}</h2>\n//         <p>Temperature: {temperature}°C</p>\n//         <p>Feels like: {feelsLikeTemperature}°C</p>\n//         <p>Humidity: {humidity}%</p>\n//         <p>Wind Speed: {windSpeed} m/s</p>\n//       </div>\n//     );\n//   };\n\n//   const renderLocationDropdown = () => {\n//     return (\n//       <select value={location} onChange={handleLocationChange}>\n//         <option value=\"\">Select a location...</option>\n//         <option value=\"New York\">New York</option>\n//         <option value=\"London\">London</option>\n//         <option value=\"Tokyo\">Tokyo</option>\n//         <option value=\"Sydney\">Sydney</option>\n//         <option value=\"Japan\">Japan</option>\n//         <option value=\"Mumbai\">Mumbai</option>\n//         <option value=\"Hyderabad\">Hyderabad</option>\n//       </select>\n//     );\n//   };\n\n//   const renderHeader = () => {\n//     const date = moment().format(\"MMMM Do YYYY, h:mm:ss a\");\n\n//     return (\n//       <div>\n//         <h1>Hello user!</h1>\n//         <p>{date}</p>\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div>\n//       {renderHeader()}\n//       {renderLocationDropdown()}\n//       {renderWeatherData()}\n//     </div>\n//   );\n// };\n\n// export default WeatherApp;\n\n// ------------------------------------------\n// Big\n\n// import React, { useState, useEffect } from \"react\";\n// import moment from \"moment\";\n// import axios from \"axios\";\n// import Select from \"react-select\";\n\n// const WeatherApp = () => {\n//   const [location, setLocation] = useState(null);\n//   const [weatherData, setWeatherData] = useState(null);\n//   const [loading, setLoading] = useState(false);\n\n//   const options = [\n//     { value: \"New York\", label: \"New York\" },\n//     { value: \"London\", label: \"London\" },\n//     { value: \"Tokyo\", label: \"Tokyo\" },\n//     { value: \"Sydney\", label: \"Sydney\" },\n//     { value: \"Japan\", label: \"Japan\" },\n//     { value: \"Mumbai\", label: \"Mumbai\" },\n//     { value: \"Hyderabad\", label: \"Hyderabad\" },\n//   ];\n\n//   useEffect(() => {\n//     const fetchWeatherData = async () => {\n//       if (location) {\n//         setLoading(true);\n//         const apiKey = \"94769bac42f99a1dd90610f2611e3ae4\";\n//         const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${location.value}&appid=${apiKey}&units=metric`;\n//         try {\n//           const response = await axios.get(apiUrl);\n//           setWeatherData(response.data);\n//           setLoading(false);\n//         } catch (error) {\n//           console.log(error);\n//           setLoading(false);\n//         }\n//       }\n//     };\n\n//     fetchWeatherData();\n//   }, [location]);\n\n//   const handleLocationChange = (selectedOption) => {\n//     setLocation(selectedOption);\n//   };\n\n//   const renderWeatherData = () => {\n//     if (loading) {\n//       return <p>Loading weather data...</p>;\n//     }\n\n//     if (!weatherData) {\n//       return null;\n//     }\n\n//     const weatherDescription = weatherData.weather[0].description;\n//     const temperature = Math.round(weatherData.main.temp);\n//     const feelsLikeTemperature = Math.round(weatherData.main.feels_like);\n//     const humidity = weatherData.main.humidity;\n//     const windSpeed = weatherData.wind.speed;\n\n//     return (\n//       <div>\n//         <h2>{weatherDescription}</h2>\n//         <p>Temperature: {temperature}°C</p>\n//         <p>Feels like: {feelsLikeTemperature}°C</p>\n//         <p>Humidity: {humidity}%</p>\n//         <p>Wind Speed: {windSpeed} m/s</p>\n//       </div>\n//     );\n//   };\n\n//   const renderLocationDropdown = () => {\n//     return (\n//       <Select\n//         value={location}\n//         onChange={handleLocationChange}\n//         options={options}\n//         placeholder=\"Select a location...\"\n//       />\n//     );\n//   };\n\n//   const renderHeader = () => {\n//     const date = moment().format(\"MMMM Do YYYY, h:mm:ss a\");\n\n//     return (\n//       <div>\n//         <h1>Hello user!</h1>\n//         <p>{date}</p>\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div>\n//       {renderHeader()}\n//       {renderLocationDropdown()}\n//       {renderWeatherData()}\n//     </div>\n//   );\n// };\n\n// export default WeatherApp;","map":{"version":3,"names":[],"sources":["/Users/arjun/Desktop/Code/React/weather_app/src/WeatherApp.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import moment from \"moment\";\n// import axios from \"axios\";\n\n// const WeatherApp = () => {\n//   const [location, setLocation] = useState(\"\");\n//   const [weatherData, setWeatherData] = useState(null);\n//   const [loading, setLoading] = useState(false);\n\n//   useEffect(() => {\n//     const fetchWeatherData = async () => {\n//       if (location) {\n//         setLoading(true);\n//         const apiKey = \"94769bac42f99a1dd90610f2611e3ae4\";\n//         const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${apiKey}&units=metric`;\n//         try {\n//           const response = await axios.get(apiUrl);\n//           setWeatherData(response.data);\n//           setLoading(false);\n//         } catch (error) {\n//           console.log(error);\n//           setLoading(false);\n//         }\n//       }\n//     };\n\n//     fetchWeatherData();\n//   }, [location]);\n\n//   const handleLocationChange = (event) => {\n//     setLocation(event.target.value);\n//   };\n\n//   const renderWeatherData = () => {\n//     if (loading) {\n//       return <p>Loading weather data...</p>;\n//     }\n\n//     if (!weatherData) {\n//       return null;\n//     }\n\n//     const weatherDescription = weatherData.weather[0].description;\n//     const temperature = Math.round(weatherData.main.temp);\n//     const feelsLikeTemperature = Math.round(weatherData.main.feels_like);\n//     const humidity = weatherData.main.humidity;\n//     const windSpeed = weatherData.wind.speed;\n\n//     return (\n//       <div>\n//         <h2>{weatherDescription}</h2>\n//         <p>Temperature: {temperature}°C</p>\n//         <p>Feels like: {feelsLikeTemperature}°C</p>\n//         <p>Humidity: {humidity}%</p>\n//         <p>Wind Speed: {windSpeed} m/s</p>\n//       </div>\n//     );\n//   };\n\n//   const renderLocationDropdown = () => {\n//     return (\n//       <select value={location} onChange={handleLocationChange}>\n//         <option value=\"\">Select a location...</option>\n//         <option value=\"New York\">New York</option>\n//         <option value=\"London\">London</option>\n//         <option value=\"Tokyo\">Tokyo</option>\n//         <option value=\"Sydney\">Sydney</option>\n//         <option value=\"Japan\">Japan</option>\n//         <option value=\"Mumbai\">Mumbai</option>\n//         <option value=\"Hyderabad\">Hyderabad</option>\n//       </select>\n//     );\n//   };\n\n//   const renderHeader = () => {\n//     const date = moment().format(\"MMMM Do YYYY, h:mm:ss a\");\n\n//     return (\n//       <div>\n//         <h1>Hello user!</h1>\n//         <p>{date}</p>\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div>\n//       {renderHeader()}\n//       {renderLocationDropdown()}\n//       {renderWeatherData()}\n//     </div>\n//   );\n// };\n\n// export default WeatherApp;\n\n\n// ------------------------------------------\n// Big\n\n\n// import React, { useState, useEffect } from \"react\";\n// import moment from \"moment\";\n// import axios from \"axios\";\n// import Select from \"react-select\";\n\n// const WeatherApp = () => {\n//   const [location, setLocation] = useState(null);\n//   const [weatherData, setWeatherData] = useState(null);\n//   const [loading, setLoading] = useState(false);\n\n//   const options = [\n//     { value: \"New York\", label: \"New York\" },\n//     { value: \"London\", label: \"London\" },\n//     { value: \"Tokyo\", label: \"Tokyo\" },\n//     { value: \"Sydney\", label: \"Sydney\" },\n//     { value: \"Japan\", label: \"Japan\" },\n//     { value: \"Mumbai\", label: \"Mumbai\" },\n//     { value: \"Hyderabad\", label: \"Hyderabad\" },\n//   ];\n\n//   useEffect(() => {\n//     const fetchWeatherData = async () => {\n//       if (location) {\n//         setLoading(true);\n//         const apiKey = \"94769bac42f99a1dd90610f2611e3ae4\";\n//         const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${location.value}&appid=${apiKey}&units=metric`;\n//         try {\n//           const response = await axios.get(apiUrl);\n//           setWeatherData(response.data);\n//           setLoading(false);\n//         } catch (error) {\n//           console.log(error);\n//           setLoading(false);\n//         }\n//       }\n//     };\n\n//     fetchWeatherData();\n//   }, [location]);\n\n//   const handleLocationChange = (selectedOption) => {\n//     setLocation(selectedOption);\n//   };\n\n//   const renderWeatherData = () => {\n//     if (loading) {\n//       return <p>Loading weather data...</p>;\n//     }\n\n//     if (!weatherData) {\n//       return null;\n//     }\n\n//     const weatherDescription = weatherData.weather[0].description;\n//     const temperature = Math.round(weatherData.main.temp);\n//     const feelsLikeTemperature = Math.round(weatherData.main.feels_like);\n//     const humidity = weatherData.main.humidity;\n//     const windSpeed = weatherData.wind.speed;\n\n//     return (\n//       <div>\n//         <h2>{weatherDescription}</h2>\n//         <p>Temperature: {temperature}°C</p>\n//         <p>Feels like: {feelsLikeTemperature}°C</p>\n//         <p>Humidity: {humidity}%</p>\n//         <p>Wind Speed: {windSpeed} m/s</p>\n//       </div>\n//     );\n//   };\n\n//   const renderLocationDropdown = () => {\n//     return (\n//       <Select\n//         value={location}\n//         onChange={handleLocationChange}\n//         options={options}\n//         placeholder=\"Select a location...\"\n//       />\n//     );\n//   };\n\n//   const renderHeader = () => {\n//     const date = moment().format(\"MMMM Do YYYY, h:mm:ss a\");\n\n//     return (\n//       <div>\n//         <h1>Hello user!</h1>\n//         <p>{date}</p>\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div>\n//       {renderHeader()}\n//       {renderLocationDropdown()}\n//       {renderWeatherData()}\n//     </div>\n//   );\n// };\n\n// export default WeatherApp;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}