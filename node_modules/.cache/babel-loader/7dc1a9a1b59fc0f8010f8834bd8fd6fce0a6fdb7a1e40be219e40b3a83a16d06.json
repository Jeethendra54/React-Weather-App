{"ast":null,"code":"var _jsxFileName = \"/Users/arjun/Desktop/Code/React/weather_app/src/WeatherApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherApp = () => {\n  _s();\n  const [location, setLocation] = useState(\"\");\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      if (location) {\n        setLoading(true);\n        const apiKey = \"94769bac42f99a1dd90610f2611e3ae4\";\n        const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${apiKey}&units=metric`;\n        try {\n          const response = await axios.get(apiUrl);\n          setWeatherData(response.data);\n          setLoading(false);\n        } catch (error) {\n          console.log(error);\n          setLoading(false);\n        }\n      }\n    };\n    fetchWeatherData();\n  }, [location]);\n  const handleLocationChange = event => {\n    setLocation(event.target.value);\n  };\n  const renderWeatherData = () => {\n    if (!weatherData) {\n      return null;\n    }\n    const weatherDescription = weatherData.weather[0].description;\n    const temperature = Math.round(weatherData.main.temp);\n    const feelsLikeTemperature = Math.round(weatherData.main.feels_like);\n    const humidity = weatherData.main.humidity;\n    const windSpeed = weatherData.wind.speed;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weatherDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", temperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Feels like: \", feelsLikeTemperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind Speed: \", windSpeed, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  };\n  const renderLocationDropdown = () => {\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      value: location,\n      onChange: handleLocationChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a location...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"New York\",\n        children: \"New York\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"London\",\n        children: \"London\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Tokyo\",\n        children: \"Tokyo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Sydney\",\n        children: \"Sydney\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  };\n  const renderHeader = () => {\n    const date = moment().format(\"MMMM Do YYYY, h:mm:ss a\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello user!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [renderHeader(), renderLocationDropdown(), renderWeatherData()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherApp, \"nSGR+6/Px5DVJZvde4W8Rfczhss=\");\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","useEffect","moment","axios","jsxDEV","_jsxDEV","WeatherApp","_s","location","setLocation","weatherData","setWeatherData","loading","setLoading","fetchWeatherData","apiKey","apiUrl","response","get","data","error","console","log","handleLocationChange","event","target","value","renderWeatherData","weatherDescription","weather","description","temperature","Math","round","main","temp","feelsLikeTemperature","feels_like","humidity","windSpeed","wind","speed","children","fileName","_jsxFileName","lineNumber","columnNumber","renderLocationDropdown","onChange","renderHeader","date","format","_c","$RefreshReg$"],"sources":["/Users/arjun/Desktop/Code/React/weather_app/src/WeatherApp.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nconst WeatherApp = () => {\n  const [location, setLocation] = useState(\"\");\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      if (location) {\n        setLoading(true);\n        const apiKey = \"94769bac42f99a1dd90610f2611e3ae4\";\n        const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${apiKey}&units=metric`;\n        try {\n          const response = await axios.get(apiUrl);\n          setWeatherData(response.data);\n          setLoading(false);\n        } catch (error) {\n          console.log(error);\n          setLoading(false);\n        }\n      }\n    };\n\n    fetchWeatherData();\n  }, [location]);\n\n  const handleLocationChange = (event) => {\n    setLocation(event.target.value);\n  };\n\n  const renderWeatherData = () => {\n    if (!weatherData) {\n      return null;\n    }\n\n    const weatherDescription = weatherData.weather[0].description;\n    const temperature = Math.round(weatherData.main.temp);\n    const feelsLikeTemperature = Math.round(weatherData.main.feels_like);\n    const humidity = weatherData.main.humidity;\n    const windSpeed = weatherData.wind.speed;\n\n    return (\n      <div>\n        <h2>{weatherDescription}</h2>\n        <p>Temperature: {temperature}°C</p>\n        <p>Feels like: {feelsLikeTemperature}°C</p>\n        <p>Humidity: {humidity}%</p>\n        <p>Wind Speed: {windSpeed} m/s</p>\n      </div>\n    );\n  };\n\n  const renderLocationDropdown = () => {\n    return (\n      <select value={location} onChange={handleLocationChange}>\n        <option value=\"\">Select a location...</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"London\">London</option>\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Sydney\">Sydney</option>\n      </select>\n    );\n  };\n\n  const renderHeader = () => {\n    const date = moment().format(\"MMMM Do YYYY, h:mm:ss a\");\n\n    return (\n      <div>\n        <h1>Hello user!</h1>\n        <p>{date}</p>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      {renderHeader()}\n      {renderLocationDropdown()}\n      {renderWeatherData()}\n    </div>\n  );\n};\n\nexport default WeatherApp;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}